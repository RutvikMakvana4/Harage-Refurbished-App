<%- include("../layouts/header.ejs") %>

    <style>
        .iti {
            width: 100%;
        }

        #userList {
            width: 100% !important;
        }
    </style>
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Manage Users</h4>
                        <!-- Add the dropdown for last searches -->
                        <div class="dropdown text-end mt-2">
                            <button class="btn btn-secondary dropdown-toggle" type="button"
                                id="lastSearchesDropdownButton" data-bs-toggle="dropdown" aria-haspopup="true"
                                aria-expanded="false">
                                Last Searches
                            </button>
                            <div class="dropdown-menu" aria-labelledby="lastSearchesDropdownButton">
                                <ul id="lastSearchesDropdown" class="list-unstyled">
                                </ul>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <table id="userList" class="table table-striped table-bordered zero-configuration">
                                <thead>
                                    <tr>
                                        <th>No.</th>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Phone</th>
                                        <th>Profile</th>
                                        <th>Address</th>
                                        <th>Registration Date</th>
                                        <th>Last Login</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>

        jQuery(document).ready(function () {

            let userListURL = window.location.pathname.split('/')
            let userId = userListURL.pop()

            var table = $('#userList').DataTable({
                paging: true,
                responsive: true,
                searching: true,
                processing: true,
                serverSide: true,
                ordering: false,
                language: {
                    oPaginate: {
                        sNext: '<i class="fa fa-forward"></i>',
                        sPrevious: '<i class="fa fa-backward"></i>',
                        sFirst: '<i class="fa fa-step-backward"></i>',
                        sLast: '<i class="fa fa-step-forward"></i>'
                    }
                },
                ajax: {
                    url: `<%= process.env.APP_URL_ADMIN %>/webAdmin/manageUser/viewUser/${userId}`,
                    type: "GET",
                },
                columns: [
                    {
                        "data": "id",
                        "render": function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        "data": "fullName",
                        "render": function (data, type, row, meta) {
                            return (row.fullName !== null) ? `<div style="text-wrap: nowrap;">${row.fullName}</div>` : `<div style="font-weight: 700; margin-left: 25px;">-</div>`
                        }
                    },
                    {
                        "data": "email",
                        "render": function (data, type, row, meta) {
                            return row.email
                        }

                    },
                    {
                        "data": "phone",
                        "render": function (data, type, row) {
                            return (row.countryCode !== null && row.phone !== null) ? `<div style="width: 133px; text-wrap: initial;">${row.countryCode}  ${row.phone}</div>` : `<div style="font-weight: 700; margin-left: 25px;">-</div>`
                        }
                    },
                    {
                        "data": "image",
                        "render": function (data) {
                            return data === null ? `<img src="${'<%= process.env.APP_URL_ADMIN %>'}/adminWeb/img/profile-image/profile.png" style="height: 80px; width: 80px; border-radius: 10px;"/>` : `<img src="${'<%= process.env.APP_URL_ADMIN %>'}/${data}" style="height: 80px; width: 80px; border-radius: 10px;"/>`
                        }
                    },
                    {
                        "data": "address",
                        "render": function (data, type, row, meta) {
                            if(row.address == null){
                                return `<div>-</div>`
                            }

                            if (row.address.type) {
                                if (row.address.type === "0") {
                                    address = `${row.address.floor}, ${row.address.buildingName}, ${row.address.company}, ${row.address.street}, ${row.address.countryCode} ${row.address.mobileNumber}`;
                                } else if (row.address.type === "1") {
                                    address = `${row.address.houseNumber}, ${row.address.street}, ${row.address.countryCode} ${row.address.mobileNumber}`;
                                } else if (row.address.type === "2") {
                                    address = `${row.address.floor}, ${row.address.apartmentNo}, ${row.address.buildingName}, ${row.address.street}, ${row.address.countryCode} ${row.address.mobileNumber}`;
                                }
                            }

                            return row.address != "" ? `<div class="wrapped-content" style="width: 295px;word-wrap: break-word;text-wrap: initial;"> ${address} </div>` : `<div style="text-align: center;font-weight: 700;">-</div>`
                        }

                    },
                    {
                        "data": "registrationDate",
                        "render": function (data, type, row, meta) {
                            const date = row.createdAt
                            const originalDate = new Date(date);

                            const day = String(originalDate.getDate()).padStart(2, '0');
                            const month = String(originalDate.getMonth() + 1).padStart(2, '0');
                            const year = originalDate.getFullYear();

                            const formattedDate = `${day}-${month}-${year}`;
                            return formattedDate
                        }
                    },
                    {
                        "data": "lastLogin",
                        "render": function (data, type, row, meta) {
                            const date = row.lastLogin;
                            const originalDate = new Date(date);

                            const day = String(originalDate.getDate()).padStart(2, '0');
                            const month = String(originalDate.getMonth() + 1).padStart(2, '0');
                            const year = originalDate.getFullYear();

                            const hours = String(originalDate.getHours()).padStart(2, '0');
                            const minutes = String(originalDate.getMinutes()).padStart(2, '0');
                            const seconds = String(originalDate.getSeconds()).padStart(2, '0');

                            const formattedDate = `${day}-${month}-${year} - ${hours}:${minutes}:${seconds}`;
                            return formattedDate;
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {

                            return `<a href="/webAdmin/manageUser/updateUserPage/${data._id}" class="btn btn-primary shadow btn-xs sharp me-1" ><i class="fa fa-pencil"></i></a>` +
                                `<a class="btn btn-danger shadow btn-xs sharp" onclick="deleteUser('${data._id}')" ><i class="fa fa-trash"></i></a>`
                        }

                    },
                ],
                //  columnDefs: [{
                //     'targets': [0, 5], // column index (start from 0)
                //     'orderable': false, // set orderable false for selected columns
                // }],
            });

            function saveKeywordsToDatabase(keyword, type = "2") {
                $.ajax({
                    url: `<%= process.env.APP_URL_ADMIN %>/webAdmin/save-history/save?saveUsersKeywords=${keyword}&type=${type}`,
                    type: 'POST',
                    data: { saveUsersKeywords: keyword },
                    success: function (data) {
                        console.log('Search keyword saved successfully:', keyword);
                    },
                    error: function (error) {
                        console.error('Error saving search keyword:', error);
                    }
                });
            }

            var currentSearch = '';

            $('#userList_filter input').on('input', function () {
               var previousSearch = currentSearch;

                currentSearch = $(this).val().trim();

                if (previousSearch && !currentSearch) {
                    saveKeywordsToDatabase(previousSearch);
                    displayLastSearchesDropdown();
                }
            });


            function displayLastSearchesDropdown(type = "2") {
                $.ajax({
                    url: `<%= process.env.APP_URL_ADMIN %>/webAdmin/save-history/search-keywords?type=${type}`,
                    type: 'GET',
                    success: function (data) {

                        var dropdownList = $('#lastSearchesDropdown');
                        dropdownList.empty();

                        data.forEach(function (search) {
                            var listItem = $('<li>').addClass('dropdown-item').text(search);
                            listItem.on('click', function () {
                                $('#userList_filter input').val(search).trigger('input');
                            });
                            dropdownList.append(listItem);

                            $('#userList_filter input').val('')
                            table.search('').draw();
                        });
                    },
                    error: function (error) {
                        console.error('Error fetching last searches:', error);
                    }
                });
            }

            displayLastSearchesDropdown();


        });

        function deleteUser(userId) {

            // ev.preventDefault();
            // var id = ev.currentTarget.getAttribute('href');

            Swal.fire({
                title: 'Are you sure you want to delete this user ?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it !!'

            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `<%= process.env.APP_URL_ADMIN %>/webAdmin/manageUser/delete-user/${userId}`,
                        type: 'DELETE',
                        success: function () {
                            Swal.fire(
                                'Deleted!',
                                'User deleted successfully',
                                'success'
                            ).then(() => {
                                // window.location.reload()
                                $("#userList").DataTable().ajax.reload();
                            })

                        }
                    });
                }

            }).catch(err => console.log(err))
        }


        function approveUser(userId) {

            Swal.fire({
                title: 'Are you sure you want to Aproove this user ?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Aproove it !!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `<%= process.env.APP_URL_ADMIN %>/webAdmin/manageUser/approve-user/${userId}`,
                        type: 'PUT'
                        // success: function (errr) {
                        //     console.log(errr, "errr")
                        //     console.log("0000")
                        //     // $(`#${userId}`).removeClass('btn-primary').addClass('btn-success').text('Approved').prop('disabled', true);


                        //     Swal.fire(
                        //         'Aprooved!',
                        //         'User Aprooved successfully',
                        //         'success'
                        //     ).then(() => {
                        //         console.log("9090")
                        //         $("#table123").DataTable().ajax.reload();
                        //     })
                        // },
                        // error: function (xhr, status, error) {
                        //     console.log(error);
                        //     Swal.fire(
                        //         'Error!',
                        //         'There was an error approving the user.',
                        //         'error'
                        //     );
                        // }
                    });
                    location.reload(true);
                    // $("#table123").DataTable().ajax.reload();
                }

            }).catch(err => console.log(err))

        }




    </script>

    <%- include("../layouts/footer.ejs") %>